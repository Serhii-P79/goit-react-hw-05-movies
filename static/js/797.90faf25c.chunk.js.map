{"version":3,"file":"static/js/797.90faf25c.chunk.js","mappings":"qSAMaA,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,KAE9BC,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EAAY,CAAC,IACAK,EADD,mCACd,6FACET,GAAW,GADb,mBAG8BU,EAAAA,EAAAA,IAAeN,GAH7C,gBAGYO,EAHZ,EAGYA,QACRf,EAAUe,GAJd,gDAMIb,EAAS,EAAD,IANZ,yBAQIE,GAAW,GARf,4EADc,qDAYdS,OAED,CAACL,IAYJ,OACE,6BACE,UAAC,KAAD,CAAYQ,OAAO,GAAGC,SAVP,SAAAC,GACjBA,EAAEC,iBAGF,IAAMC,EAAIF,EAAEG,cAAcC,SAASC,YAAYC,MAC/CjB,EAAgB,CAAEa,EAAAA,KAKhB,WACE,kBAAOK,KAAK,OAAOC,KAAK,iBACxB,SAAC,KAAD,CAAWD,KAAK,SAAhB,uBAEDtB,IAAW,SAAC,KAAD,KACVF,GAASF,IACT,SAAC,KAAD,UACGA,EAAO4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMtB,GAA1C,SACGmB,KAFID,a,2OCpDRK,EAASC,EAAAA,GAAAA,GAAH,sGAONC,EAAWD,EAAAA,GAAAA,OAAH,qEAKRE,EAAcF,EAAAA,GAAAA,IAAH,sJAYXG,EAAcH,EAAAA,GAAAA,IAAH,mFAOXI,EAAwBJ,EAAAA,GAAAA,IAAH,sFAOrBK,EAAYL,EAAAA,GAAAA,OAAH,8CAITM,EAAaN,EAAAA,GAAAA,KAAH","sources":["pages/MoviesPage.jsx","pages/pages.styled.jsx"],"sourcesContent":["import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getSearchMovie } from 'services';\nimport { SearchBTN, Movies, SearchForm } from './pages.styled';\nimport { Loader } from 'components';\n\nexport const MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchLine = searchParams.get('q');\n\n  const location = useLocation();\n\n  //console.log('location - MoviesPage - ', location);\n\n  useEffect(() => {\n    if (searchLine) {\n      async function fetchMovies() {\n        setLoading(true);\n        try {\n          const { results } = await getSearchMovie(searchLine);\n          setMovies(results);\n        } catch (error) {\n          setError(error);\n        } finally {\n          setLoading(false);\n        }\n      }\n      fetchMovies();\n    }\n  }, [searchLine]);\n\n  //console.log(searchLine);\n\n  const filmSearch = e => {\n    e.preventDefault();\n    // console.log('сабмит остановлен');\n    // console.log(e.currentTarget.elements.search_line.value);\n    const q = e.currentTarget.elements.search_line.value;\n    setSearchParams({ q });\n  };\n\n  return (\n    <main>\n      <SearchForm action=\"\" onSubmit={filmSearch}>\n        <input type=\"text\" name=\"search_line\"></input>\n        <SearchBTN type=\"submit\">Search</SearchBTN>\n      </SearchForm>\n      {loading && <Loader />}\n      {!error && movies && (\n        <Movies>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </Movies>\n      )}\n    </main>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Movies = styled.ul`\n  padding-left: 25px;\n  > :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const GoToBack = styled.button`\n  padding: 5px 15px;\n  margin-bottom: 5px;\n`;\n\nexport const DetailsPage = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n  > img {\n    height: 400px;\n    width: 266px;\n  }\n  p {\n    width: 95%;\n  }\n`;\n\nexport const Description = styled.div`\n  padding-left: 20px;\n  h4 {\n    margin-top: 10px;\n  }\n`;\n\nexport const AdditionalInformation = styled.div`\n  margin-bottom: 10px;\n  ul {\n    padding-left: 25px;\n  }\n`;\n\nexport const SearchBTN = styled.button`\n  padding: 2px 10px;\n`;\n\nexport const SearchForm = styled.form`\n  margin-bottom: 10px;\n`;\n"],"names":["MoviesPage","useState","movies","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchLine","get","location","useLocation","useEffect","fetchMovies","getSearchMovie","results","action","onSubmit","e","preventDefault","q","currentTarget","elements","search_line","value","type","name","map","id","title","to","state","from","Movies","styled","GoToBack","DetailsPage","Description","AdditionalInformation","SearchBTN","SearchForm"],"sourceRoot":""}