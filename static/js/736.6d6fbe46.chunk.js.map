{"version":3,"file":"static/js/736.6d6fbe46.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","hooks/useFetchMovies.js","services/FilmApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CssCast = {\n  Ul: styled.ul`\n    padding: 10px;\n    > :not(:last-child) {\n      margin-bottom: 20px;\n    }\n  `,\n  Poster: styled.img`\n    height: 200px;\n  `,\n};\n","import { useParams } from 'react-router-dom';\nimport { Loader } from 'components';\nimport { useFetchMovieCast } from 'hooks';\nimport no_img from 'img/no_image.png';\nimport { CssCast } from './Cast.styled';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const { movieCredits, loading, error } = useFetchMovieCast(movieId);\n\n  // console.log('movieCredits - ', movieCredits);\n  const { cast } = movieCredits;\n  //  console.log(cast);\n\n  return (\n    <div>\n      {loading && <Loader />}\n\n      {!error && (\n        <CssCast.Ul>\n          {cast && cast.length > 0 ? (\n            cast.map(({ cast_id, character, name, profile_path }) => {\n              return (\n                <li key={cast_id}>\n                  <CssCast.Poster\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                        : no_img\n                    }\n                    alt={character}\n                  />\n                  <p>character - {character}</p> <p>name - {name}</p>\n                </li>\n              );\n            })\n          ) : (\n            <div> not cast </div>\n          )}\n        </CssCast.Ul>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  getTrending,\n  getMovieDetailsById,\n  getMovieCredits,\n  getMovieReviews,\n} from 'services';\n\nexport const useFetchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setLoading(true);\n      try {\n        const { results } = await getTrending();\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return { movies, loading, error };\n};\n\nexport const useFetchMovieDetails = id => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovieId() {\n      setLoading(true);\n      try {\n        const results = await getMovieDetailsById(id);\n     //   console.log(results);\n        setMovie(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieId();\n  }, [id]);\n\n  return { movie, loading, error };\n};\n\nexport const useFetchMovieCast = id => {\n  const [movieCredits, setMovieCredits] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovieId() {\n      setLoading(true);\n      try {\n        const results = await getMovieCredits(id);\n   //     console.log(results);\n        setMovieCredits(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieId();\n  }, [id]);\n\n  return { movieCredits, loading, error };\n};\n\nexport const useFetchMovieReviews = id => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovieId() {\n      setLoading(true);\n      try {\n        const results = await getMovieReviews(id);\n   //     console.log(results);\n        setMovieReviews(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieId();\n  }, [id]);\n\n  return { movieReviews, loading, error };\n};\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=0ba81670c9cf6e5d09ab4fdfcce59e32\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst api_key = '0ba81670c9cf6e5d09ab4fdfcce59e32';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&query=bnvbnvbnvbn&page=1&include_adult=false\nexport const getSearchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${api_key}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/15?api_key=<<api_key>>&language=en-US\nexport const getMovieDetailsById = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/15/credits?api_key=<<api_key>>&language=en-US\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${api_key}&language=en-US`\n  );\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/15/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["CssCast","Ul","styled","Poster","Cast","movieId","useParams","useFetchMovieCast","movieCredits","loading","error","cast","length","map","cast_id","character","name","profile_path","src","no_img","alt","useFetchMovies","useState","movies","setMovies","setError","setLoading","useEffect","getTrending","results","fetchMovies","useFetchMovieDetails","id","movie","setMovie","getMovieDetailsById","fetchMovieId","setMovieCredits","getMovieCredits","useFetchMovieReviews","movieReviews","setMovieReviews","getMovieReviews","axios","api_key","response","data","getSearchMovie","query"],"sourceRoot":""}