{"version":3,"file":"static/js/602.d2726bb6.chunk.js","mappings":"wRAuBaA,EAAmB,WAAO,IAAD,QAC5BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,IAAqBF,GAA/CG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,MAGlBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,GAAeC,EAAAA,EAAAA,WACb,UAAAF,EAASG,aAAT,mBAAgBC,YAAhB,eAAsBC,WAAtB,UAAiCL,EAASG,aAA1C,iBAAiC,EAAgBC,YAAjD,aAAiC,EAAsBE,SAAU,KAD5DF,GAAP,eAmBQG,EAAgEZ,EAAhEY,YAAaC,EAAmDb,EAAnDa,eAAgBC,EAAmCd,EAAnCc,SAAUC,EAAyBf,EAAzBe,OAAQC,EAAiBhB,EAAjBgB,aAEjDC,EACJF,GACAA,EACGG,KAAI,YACH,OADiB,EAAXC,QAGPC,KAAK,MAIV,OACE,6BACE,SAAC,KAAD,CAAUC,KAAK,SAASC,QAAS,kBAAMnB,EAASM,IAAhD,wBAICR,IAAW,SAAC,KAAD,KACVC,IAAUD,IACV,iCACE,UAAC,KAAD,YACE,gBACEsB,IACEX,EAAW,0CAC4BA,GACnCY,EAENC,IAAKZ,KAEP,UAAC,KAAD,YACE,wBAAKA,KACL,4CACA,4BAA8B,GAAvBa,OAAOV,GAAd,QACA,sCACA,uBAAIF,KACJ,oCACA,uBAAIG,WAGR,UAAC,KAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMU,GAAE,kBAAa9B,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAM8B,GAAE,kBAAa9B,EAAb,YAAR,8BAIN,SAAC,EAAA+B,SAAD,CAAUC,SAAS,GAAnB,UACE,SAAC,KAAD,c,2OCxGCC,EAASC,EAAAA,GAAAA,GAAH,sGAONC,EAAWD,EAAAA,GAAAA,OAAH,qEAKRE,EAAcF,EAAAA,GAAAA,IAAH,sJAYXG,EAAcH,EAAAA,GAAAA,IAAH,mFAOXI,EAAwBJ,EAAAA,GAAAA,IAAH,sFAOrBK,EAAYL,EAAAA,GAAAA,OAAH,8CAITM,EAAaN,EAAAA,GAAAA,KAAH","sources":["pages/MovieDetailsPage.jsx","pages/pages.styled.jsx"],"sourcesContent":["//import styled from 'styled-components';\nimport { Suspense } from 'react';\nimport { Outlet, Link, useParams } from 'react-router-dom';\nimport { Loader } from 'components';\nimport { useNavigate, useLocation } from 'react-router-dom';\n//import { useEffect } from 'react';\n// import { getMovieDetailsById } from 'services';\nimport { useFetchMovieDetails } from 'hooks';\nimport { useState } from 'react';\nimport no_img from 'img/no_image.png';\nimport {\n  GoToBack,\n  DetailsPage,\n  Description,\n  AdditionalInformation,\n} from './pages.styled';\n\n// const Link = styled(NavLink)`\n//   &.active {\n//     color: tomato;\n//   }\n// `;\n\nexport const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movie, loading, error } = useFetchMovieDetails(movieId);\n  // const [from, setFrom] = useState('null');\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // const fromL =\n  //   location.state?.from?.pathname + location.state?.from?.search || '/';\n  // console.log(location);\n\n  const [from] = useState(\n    location.state?.from?.pathname + location.state?.from?.search || '/'\n  );\n\n  // useEffect(() => {\n  //   setFrom(fromL);\n  //   //// eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [fromL]);\n  //console.log(movieId);\n\n  // console.log(navigate);\n  // console.log('location - ', location);\n\n  //const from = location.state?.from?.pathname + location.state?.from?.search;\n\n  //console.log('from - ', from);\n\n  //console.log(movie);\n\n  const { poster_path, original_title, overview, genres, vote_average } = movie;\n\n  const genresStr =\n    genres &&\n    genres\n      .map(({ name }) => {\n        return name;\n      })\n      .join(', ');\n\n  // onClick={() => navigate(-1)}\n\n  return (\n    <main>\n      <GoToBack type=\"button\" onClick={() => navigate(from)}>\n        Go to back\n      </GoToBack>\n\n      {loading && <Loader />}\n      {!error && !loading && (\n        <>\n          <DetailsPage>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : no_img\n              }\n              alt={original_title}\n            />\n            <Description>\n              <h3>{original_title}</h3>\n              <span>User Score: </span>\n              <span>{Number(vote_average) * 10}%</span>\n              <h4>Overview</h4>\n              <p>{overview}</p>\n              <h4>Genres</h4>\n              <p>{genresStr}</p>\n            </Description>\n          </DetailsPage>\n          <AdditionalInformation>\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to={`/movies/${movieId}/cast`}>cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movieId}/reviews`}>reviews</Link>\n              </li>\n            </ul>\n          </AdditionalInformation>\n          <Suspense fallback=\"\">\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Movies = styled.ul`\n  padding-left: 25px;\n  > :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const GoToBack = styled.button`\n  padding: 5px 15px;\n  margin-bottom: 5px;\n`;\n\nexport const DetailsPage = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n  > img {\n    height: 400px;\n    width: 266px;\n  }\n  p {\n    width: 95%;\n  }\n`;\n\nexport const Description = styled.div`\n  padding-left: 20px;\n  h4 {\n    margin-top: 10px;\n  }\n`;\n\nexport const AdditionalInformation = styled.div`\n  margin-bottom: 10px;\n  ul {\n    padding-left: 25px;\n  }\n`;\n\nexport const SearchBTN = styled.button`\n  padding: 2px 10px;\n`;\n\nexport const SearchForm = styled.form`\n  margin-bottom: 10px;\n`;\n"],"names":["MovieDetailsPage","movieId","useParams","useFetchMovieDetails","movie","loading","error","navigate","useNavigate","location","useLocation","useState","state","from","pathname","search","poster_path","original_title","overview","genres","vote_average","genresStr","map","name","join","type","onClick","src","no_img","alt","Number","to","Suspense","fallback","Movies","styled","GoToBack","DetailsPage","Description","AdditionalInformation","SearchBTN","SearchForm"],"sourceRoot":""}